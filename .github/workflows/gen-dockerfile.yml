name: Containerize Static Site

on:
  push:
    paths:
      - .github/workflows/gen-dockerfile.yml

permissions:
  contents: write

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Dockerfile
        run: |
          echo "FROM nginx:alpine" > Dockerfile
          echo "COPY dist/ /usr/share/nginx/html" >> Dockerfile
          echo "EXPOSE 80" >> Dockerfile

      - name: Build Static Site (Vite or others)
        run: |
          if [ -f package.json ]; then
            npm install
            npm run build
          else
            mkdir -p dist
            cp -r *.html *.css *.js dist/ 2>/dev/null || true
          fi

      - name: Build Docker Image
        run: |
          docker build -t static-site:latest .

      - name: Save Docker Image to tarball
        run: |
          docker save -o image.tar static-site:latest

      - name: Create Git Tag
        id: create_tag
        run: |
          TAG="v$(date +'%Y%m%d%H%M%S')"
          echo "TAG=$TAG" >> $GITHUB_ENV
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag $TAG
          git push origin $TAG

      - name: Create Release
        uses: softprops/create-release@v1
        id: create_release
        with:
          tag_name: ${{ env.TAG }}
          release_name: Release ${{ env.TAG }}
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Docker image tarball to Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.TAG }}
          files: image.tar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
